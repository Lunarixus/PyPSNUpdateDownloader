name: Build and Release

on:
  push:
    branches:
      - main

jobs:
  build-linux:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Get commit hash
        id: get_commit
        run: echo "::set-output name=commit_hash::$(git rev-parse --short HEAD)"

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pyinstaller requests

      - name: Build executable
        run: pyinstaller --onefile main.py

      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: psn-downloader-linux-${{ steps.get_commit.outputs.commit_hash }}
          path: dist/main

  build-windows:
    runs-on: windows-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Get commit hash
        id: get_commit
        run: echo "::set-output name=commit_hash::$(git rev-parse --short HEAD)"

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pyinstaller requests

      - name: Build executable
        run: pyinstaller --onefile --noconsole main.py

      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: psn-downloader-windows-${{ steps.get_commit.outputs.commit_hash }}
          path: dist/main.exe

  build-macos:
    runs-on: macos-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Get commit hash
        id: get_commit
        run: echo "::set-output name=commit_hash::$(git rev-parse --short HEAD)"

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pyinstaller requests

      - name: Build executable
        run: pyinstaller --onefile main.py

      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: psn-downloader-macos-${{ steps.get_commit.outputs.commit_hash }}
          path: dist/main

  release:
    needs: [build-linux, build-windows, build-macos]
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Get commit hash
        id: get_commit
        run: echo "::set-output name=commit_hash::$(git rev-parse --short HEAD)"

      - name: Download Linux artifact
        uses: actions/download-artifact@v2
        with:
          name: psn-downloader-linux-${{ steps.get_commit.outputs.commit_hash }}
          path: dist/linux

      - name: Download Windows artifact
        uses: actions/download-artifact@v2
        with:
          name: psn-downloader-windows-${{ steps.get_commit.outputs.commit_hash }}
          path: dist/windows

      - name: Download macOS artifact
        uses: actions/download-artifact@v2
        with:
          name: psn-downloader-macos-${{ steps.get_commit.outputs.commit_hash }}
          path: dist/macos

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v1.0.0-${{ steps.get_commit.outputs.commit_hash }}
          release_name: Release v1.0.0-${{ steps.get_commit.outputs.commit_hash }}
          draft: false
          prerelease: false

      - name: Upload Linux Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: dist/linux/main
          asset_name: psn-downloader-linux-${{ steps.get_commit.outputs.commit_hash }}
          asset_content_type: application/octet-stream

      - name: Upload Windows Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: dist/windows/main.exe
          asset_name: psn-downloader-windows-${{ steps.get_commit.outputs.commit_hash }}.exe
          asset_content_type: application/octet-stream

      - name: Upload macOS Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: dist/macos/main
          asset_name: psn-downloader-macos-${{ steps.get_commit.outputs.commit_hash }}
          asset_content_type: application/octet-stream
